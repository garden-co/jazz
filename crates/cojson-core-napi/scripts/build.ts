/**
 * This script is currently not used, we will start to use it when we will activate NAPI by default.
 */

import { readFileSync, writeFileSync } from 'node:fs';

const file = readFileSync('./index.js');
const data = file.toString().split('/* auto-generated by NAPI-RS */')

// Add a runtime check for Node.js environment and Deno environment
let modifiedFile = `${data[0]}
const isNode = typeof process !== 'undefined' && process.versions && process.versions.node;
const isDeno = typeof Deno !== 'undefined' && typeof Deno.version !== 'undefined' && typeof Deno.version.deno !== 'undefined';

if (!isNode && !isDeno) {
  module.exports = {}
  module.exports.isActive = false
} else {
module.exports = {}
module.exports.isActive = true
    ${data[1]}
}`;

// Replace all instances of 'throw new Error' with 'console.warn' for not throwing
let index = modifiedFile.indexOf('if (loadErrors.length > 0) {',);
let finalFile = modifiedFile.slice(0, index) + modifiedFile.slice(index).replaceAll('throw new Error', 'console.warn');

// Add export for isActive at false when there is a failure to load the native binding
finalFile = finalFile.replace('console.warn(`Failed to load native binding`)', 'module.exports.isActive = false;\n  console.warn(`Failed to load native binding`)');
finalFile = finalFile.replace('module.exports = nativeBinding', '')

writeFileSync('./index.js', finalFile);
