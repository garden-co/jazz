/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthenticatedImport } from "./routes/_authenticated";
import { Route as AuthenticatedGameGameIdImport } from "./routes/_authenticated/game.$gameId";
import { Route as AuthenticatedWaitingRoomWaitingRoomIdImport } from "./routes/_authenticated/waiting-room.$waitingRoomId";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedWaitingRoomWaitingRoomIdRoute =
  AuthenticatedWaitingRoomWaitingRoomIdImport.update({
    id: "/waiting-room/$waitingRoomId",
    path: "/waiting-room/$waitingRoomId",
    getParentRoute: () => AuthenticatedRoute,
  } as any);

const AuthenticatedGameGameIdRoute = AuthenticatedGameGameIdImport.update({
  id: "/game/$gameId",
  path: "/game/$gameId",
  getParentRoute: () => AuthenticatedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated": {
      id: "/_authenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated/game/$gameId": {
      id: "/_authenticated/game/$gameId";
      path: "/game/$gameId";
      fullPath: "/game/$gameId";
      preLoaderRoute: typeof AuthenticatedGameGameIdImport;
      parentRoute: typeof AuthenticatedImport;
    };
    "/_authenticated/waiting-room/$waitingRoomId": {
      id: "/_authenticated/waiting-room/$waitingRoomId";
      path: "/waiting-room/$waitingRoomId";
      fullPath: "/waiting-room/$waitingRoomId";
      preLoaderRoute: typeof AuthenticatedWaitingRoomWaitingRoomIdImport;
      parentRoute: typeof AuthenticatedImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedGameGameIdRoute: typeof AuthenticatedGameGameIdRoute;
  AuthenticatedWaitingRoomWaitingRoomIdRoute: typeof AuthenticatedWaitingRoomWaitingRoomIdRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedGameGameIdRoute: AuthenticatedGameGameIdRoute,
  AuthenticatedWaitingRoomWaitingRoomIdRoute:
    AuthenticatedWaitingRoomWaitingRoomIdRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof AuthenticatedRouteWithChildren;
  "/game/$gameId": typeof AuthenticatedGameGameIdRoute;
  "/waiting-room/$waitingRoomId": typeof AuthenticatedWaitingRoomWaitingRoomIdRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof AuthenticatedRouteWithChildren;
  "/game/$gameId": typeof AuthenticatedGameGameIdRoute;
  "/waiting-room/$waitingRoomId": typeof AuthenticatedWaitingRoomWaitingRoomIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_authenticated": typeof AuthenticatedRouteWithChildren;
  "/_authenticated/game/$gameId": typeof AuthenticatedGameGameIdRoute;
  "/_authenticated/waiting-room/$waitingRoomId": typeof AuthenticatedWaitingRoomWaitingRoomIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "" | "/game/$gameId" | "/waiting-room/$waitingRoomId";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "" | "/game/$gameId" | "/waiting-room/$waitingRoomId";
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/_authenticated/game/$gameId"
    | "/_authenticated/waiting-room/$waitingRoomId";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/game/$gameId",
        "/_authenticated/waiting-room/$waitingRoomId"
      ]
    },
    "/_authenticated/game/$gameId": {
      "filePath": "_authenticated/game.$gameId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/waiting-room/$waitingRoomId": {
      "filePath": "_authenticated/waiting-room.$waitingRoomId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
